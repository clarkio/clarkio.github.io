Research on supporting old post URLs
-----


https://daily-dev-tips.com/posts/astro-moving-from-collections-to-dynamic-routing/


Ok we have things working with the following
  [year]/[month]/[day]/[name].astro

Such that Astro knows it needs to render a page for the given Markdown files found in the _posts folder

  This was accomplished with a getStaticPaths() function that fetched all files from _posts folder and parse the year, month, day and name from each file and supplied that as a "param" in the returned array of the function

However we've yet to determine how to load a Markdown file from the _posts folder based on the request path

As of October 13, 2021 I've solved how to support legacy posts!

1. Using this dynamic routing as to indicate to Astro at build time how to render the legacy posts: [year]/[month]/[day]/[name].astro

2. Mapping the legacy posts to the dynamic route parameters [<route-parameter>] in the getStaticPaths() function:

export async function getStaticPaths() {
  let allLegacyPosts = Astro.fetchContent('../../../old-posts/*.md');
  const result = allLegacyPosts.map(post => {
    const url = post.url.replace('/old-posts/', '');
    const year = url.substr(0,4);
    const month = url.substr(5,2);
    const day = url.substr(8,2);
    const name = url.substr(11);
    const slug = '/' + url.replace('-', '/').replace('-', '/').replace('-', '/') + '/';
    return {params: {year, month, day, name}, props: {post}};
  });
  return result;
}

// Note: the parsing of the parameters from the post files could maybe be done more elegantly

A big gotcha was figuring out the correct relative path to the "old-posts" directory from this current [name].astro file. This slowed things down quite a bit

Also when testing a silly typo in the URL made it seem like things weren't working but this was quickly realized the next day after some sleep
  Example: for this post 2017-02-01-introducing-astro.md I accidentally was trying to request it from the following url with an extra 't' in it localhost:3000/2017/02/01/introducting-astro/

The next hurdle was reading the file content and having it rendered. This still needs to be tweaked a bit for styling but we're able to gather this when processing the static files in the getStaticPath() function in the "props" property. Setting up this in the function return value props: {content: postContent} allows us to access it in the component through Astro.props.content or const {content} = Astro.props;



Need to create a Node.js script to read in each old post and clean up for support in Astro. You can see the script in /helper-scripts/update-legacy-posts.js/

The script describes what needed to be modified from jekyll frontmatter and syntax in order to be supported during an Astro build

This was mostly removing frontmatter keys and adjusting links to other posts



It seems Astro.fetchContent() can only be executed once in a page?

I was trying to do the following:

```
let posts = Astro.fetchContent<MarkdownFrontmatter>('./blog/*.md');
let oldPosts = Astro.fetchContent<MarkdownFrontmatter>('./old-posts/*.md');
```

In doing that Astro/Snowpack throws and error:
[00:00:00] [snowpack] Build Result Error: There was a problem with a file build result.
[executing astro] Error: Parse error @:1:1
    at parse (/workspaces/clarkio.github.io/node_modules/snowpack/node_modules/es-module-lexer/dist/lexer.cjs:1:402)
    at scanCodeImportsExports (/workspaces/clarkio.github.io/node_modules/snowpack/lib/cjs/rewrite-imports.js:21:29)
    at transformEsmImports (/workspaces/clarkio.github.io/node_modules/snowpack/lib/cjs/rewrite-imports.js:37:27)
    at Object.transformFileImports (/workspaces/clarkio.github.io/node_modules/snowpack/lib/cjs/rewrite-imports.js:108:16)
    at FileBuilder.resolveImports (/workspaces/clarkio.github.io/node_modules/snowpack/lib/cjs/build/file-builder.js:116:48)
    at async Object.loadUrl (/workspaces/clarkio.github.io/node_modules/snowpack/lib/cjs/commands/dev.js:641:39)
    at async load (/workspaces/clarkio.github.io/node_modules/snowpack/lib/cjs/commands/dev.js:217:28)
    at async /workspaces/clarkio.github.io/node_modules/snowpack/lib/cjs/ssr-loader/index.js:60:28
    at async Object.importModule (/workspaces/clarkio.github.io/node_modules/snowpack/lib/cjs/ssr-loader/index.js:165:26)
    at async load (file:///workspaces/clarkio.github.io/node_modules/astro/dist/runtime.js:95:17) {
  idx: 0
}


Instead I need to do the following which seems to work so far:

```
let posts = Astro.fetchContent<MarkdownFrontmatter>('./**/*.md');
```

Another possible solution for this issue - what if you used a svelte component/file instead?

According to the Docs, no a .svelte Page is not supported and couldn't be used as a different way to approach solving the problem
  "Astro Components (.astro) and Markdown Files (.md) are the only supported formats for pages. Other page types (like a .jsx React component) are not supported, but you can use anything as a UI component inside of an .astro page to achieve a similar result."
  > From: https://docs.astro.build/core-concepts/astro-pages/

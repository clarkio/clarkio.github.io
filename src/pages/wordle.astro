---
import BaseLayout from '../layouts/BaseLayout.astro'
---

<BaseLayout title='Wordle Leaderboard'>
  <h1>Wordle Leaderboard</h1>
  <div class='table-container'>
    <table id='leaderboard'>
      <thead>
        <tr>
          <th>Discord Name</th>
          <th>Wins</th>
          <th>Losses</th>
          <th>Ties</th>
          <th>Failures</th>
          <th>Average Attempts</th>
          <th>Total Games</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      const response = await fetch(
        'https://discord-wordle-bot-and-web-api.onrender.com/stats',
        {
          method: 'GET'
        }
      )
      const data = await response.json()
      const tbody = document.querySelector('#leaderboard tbody')

      data.forEach((player, index) => {
        const row = document.createElement('tr')
        // Add the row class that matches your CSS selector
        row.classList.add('leaderboard-row')

        row.innerHTML = `
          <td class="leaderboard-cell">${player.discord_name}</td>
          <td class="leaderboard-cell">${player.wins} (${player.win_percent}%)</td>
          <td class="leaderboard-cell">${player.losses} (${player.loss_percent}%)</td>
          <td class="leaderboard-cell">${player.ties} (${player.tie_percent}%)</td>
          <td class="leaderboard-cell">${player.failures} (${player.failure_percent}%)</td>
          <td class="leaderboard-cell">${player.avg_attempts}</td>
          <td class="leaderboard-cell">${player.total_games}</td>
        `
        tbody?.appendChild(row)
      })
    })
  </script>
  <style>
    :global(.table-container) {
      overflow-x: auto;
      max-width: 100%;
    }

    :global(table) {
      border-collapse: collapse;
      width: 100%;
      margin: 2rem 0;
    }

    :global(th) {
      background: rgba(0, 0, 255, 0.02);
      color: rgb(0, 0, 255);
      font-weight: 600;
      padding: 1rem;
      text-align: left;
      border: 1px solid rgba(0, 0, 255, 0.1);
    }

    :global(.leaderboard-cell) {
      border: 1px solid rgba(0, 0, 255, 0.1);
      color: #333;
      padding: 1rem;
      white-space: nowrap;
    }

    :global(.leaderboard-row:nth-child(even)) {
      background: rgba(0, 0, 255, 0.02);
    }

    :global(.leaderboard-row:hover) {
      background: rgba(0, 0, 255, 0.15);
    }

    /* Dark mode styles */
    :global(.dark) :global(th) {
      background: rgba(255, 255, 255, 0.02);
      color: rgb(255, 255, 255, 0.75);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    :global(.dark) :global(.leaderboard-cell) {
      border: 1px solid rgba(255, 255, 255, 0.1);
      color: rgb(255, 255, 255, 0.5);
    }

    :global(.dark) :global(.leaderboard-row:nth-child(even)) {
      background: rgba(255, 255, 255, 0.02);
    }

    :global(.dark) :global(.leaderboard-row:hover) {
      background: rgba(255, 255, 255, 0.1);
    }

    @media (max-width: 768px) {
      :global(table) {
        font-size: 14px;
      }

      :global(th),
      :global(.leaderboard-cell) {
        padding: 0.5rem;
      }
    }
  </style>
</BaseLayout>

---
import BaseLayout from '../layouts/BaseLayout.astro'
import { Image } from 'astro:assets'
import 'dotenv/config'
import star from '../images/star.png'

const requestBody = `
{
  user(login: "clarkio") {
    pinnedItems(first: 6, types: REPOSITORY) {
      edges {
        node {
            ...on Repository {
              id
            name
            description
            stargazers {
              totalCount
            }
            url
            languages(first: 3) {
              edges {
                node {
                  name
                }
              }
            }
          }
        }
      }
    }
  }
}
`

const response = await fetch('https://api.github.com/graphql', {
  method: 'POST',
  headers: { authorization: `Bearer ${process.env.GH_ACCESS_TOKEN}` },
  body: JSON.stringify({
    query: requestBody
  })
}).then((res) => res.json())

const projects = response.data.user.pinnedItems.edges
---

<BaseLayout
  title="Projects"
  description="Clarkio's GitHub repositories for all of his projects"
  keywords="clarkio, projects, github, repository, repositories"
>
  <h1>Projects</h1>
  <p>
    You can see the top, pinned, projects below but be sure to go to <a
      href="https://github.com/clarkio">Clarkio's GitHub profile</a
    > for more.
  </p>

  <div class="project-list">
    {
      projects.map(
        ({ node: { url, name, stargazers, description, languages } }) => (
          <article>
            <header>
              <h2>
                <a href={url} target="_blank">
                  {name}
                </a>
              </h2>
            </header>
            <div class="description">
              <p>{description}</p>
            </div>
            <div class="project-details">
              <>
                <Image src={star} alt="stargazers" />
                <p>{stargazers.totalCount}</p>
              </>
              {languages && (
                <ul class="languages">
                  {languages.edges.map(({ node: { name } }) => (
                    <li>{name}</li>
                  ))}
                </ul>
              )}
            </div>
          </article>
        )
      )
    }
  </div>
</BaseLayout>

<style>
  header,
  .description,
  .project-details {
    padding: 0 1rem;
  }
  h2 a {
    color: #000;
    text-decoration: underline;
  }

  .project-list {
    display: grid;
    gap: 30px;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    list-style: none;
  }

  article,
  .description {
    border: 1px dotted rgba(0, 0, 255, 0.2);
  }

  .description {
    border-width: 1px 0;
  }

  article {
    background: rgba(0, 0, 255, 0.02);
    border-radius: 4px;
    display: grid;
    gap: 0;
    grid-template-rows: subgrid;
    grid-row: span 3;
    transition: box-shadow 0.3s ease-in-out;
  }

  :global(.dark) article {
    background: rgba(0, 0, 255, 0.1);
  }

  article:hover {
    background: rgba(0, 0, 255, 0.15);
  }

  .project-details {
    align-items: center;
    display: grid;
    gap: 1rem;
    grid-template-columns: auto auto 1fr;
  }

  img {
    height: 16px;
    width: 16px;
  }

  ul.languages {
    justify-self: end;
    display: flex;
    padding: 0;
  }
  ul.languages li {
    display: inline-block;
    margin-left: 1rem;
  }

  @media (max-width: 450px) {
    .project-details {
      grid-template-columns: 16px 1fr;
      margin-top: 1rem;
    }
    .project-details p {
      margin: 0;
    }
    ul.languages {
      justify-self: start;
      margin: 0 0 1rem 0;
    }
    ul.languages li {
      margin-left: 0;
      margin-right: 1rem;
    }
  }
</style>

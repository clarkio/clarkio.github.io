---
import Layout from '../../layouts/Main.astro';
import BlogPostPreview from '../../components/BlogPostPreview.astro';
import Pagination from '../../components/Pagination.astro';

let title = 'Clarkio | Blog';
let description = 'Writings by clarkio.'
let permalink = 'https://clarkio.com/blog';

export async function getStaticPaths({paginate, rss}) {
  // const allPosts = await Astro.glob('../../**/*.md');
  const newPosts = await Astro.glob('../blog/*.md');
  const legacyPosts = await Astro.glob('../old-posts/*.md');
  const sortedPosts = legacyPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());

  // Generate an RSS feed from this collection of posts.
  // NOTE: This is disabled by default, since it requires `buildOptions.site` to be set in your "astro.config.mjs" file.
  // rss({
  //   title: 'Clarkio | Blog',
  //   description: 'Writings by clarkio.',
  //   customData: `<language>en-us</language>`,
  //   items: sortedPosts.map(item => {
  //     let url = item.url;
  //     if (item.url.includes('old-posts')) {
  //       url = item.url.replace('/old-posts/', '');
  //       url = '/' + url.replace('-', '/').replace('-', '/').replace('-', '/') + '/';
  //     }
  //     return {
  //       title: item.frontmatter.title,
  //       description: item.frontmatter.description,
  //       link: url,
  //       pubDate: item.frontmatter.date,
  //     }
  //   })
  // });

  // Return a paginated collection of paths for all posts
  return paginate(sortedPosts, {pageSize: 5});
}

const { page } = Astro.props;
---

<Layout content={{ title, description, permalink }}>
  <body>
    <div class="layout">
      <article class="content">
        <section>
          {page.data.map(p => <BlogPostPreview post={p} />)}
        </section>
      </article>
    </div>
    <footer>
      <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
    </footer>
  </body>
</Layout>
